#!/bin/sh
# vim: ft=sh ts=4 sw=4 et

set -x

fail_if_cherry_pick() {
    local message
    message="$DRONE_COMMIT_MESSAGE"

    # If commit message is in the form "module: [x.y] ...." it is considered as
    # a cherry-pick as described in https://github.com/coopengo/coog/wiki/dev-workflow
    echo "$DRONE_COMMIT_MESSAGE" | grep '\w+: \[[[:digit:]]+\.[[:digit:]]+\]' && \
        echo "Cherry-pick, no test required" && exit 1
}

checkout() {

    local branch
    branch="$DRONE_BRANCH"
    if [ "$DRONE_REPO_NAME" = "customers" ]
    then
        echo "$DRONE_BRANCH" | grep -qE "[a-z]+$"
        if [ $? -eq 0 ]
        then
            branch="master"
        elif [ "$branch" = "cegema-coog-base-cegema-2.11.2050" ]
        then
            branch="coog-base-cegema-2.11.2050"
        else
            echo "$DRONE_BRANCH" | grep -qE "coog-1\.(12|14)"
            if [ $? -eq 0 ]
            then
                branch=$(echo "$DRONE_BRANCH" | cut -d "-" -f 2,3)
            else
                exit 0
            fi
        fi

        echo "Coog branch/version will be $branch."

        git clone -b "$branch" --depth=1 https://github.com/coopengo/coog /drone/src/coog
        [ ! -d /drone/src/customers/modules ] && return 0
    fi

    git clone --depth=1 --recursive --branch "$branch" https://github.com/coopengo/trytond.git /drone/src/trytond &&
        git clone --depth=1 --recursive --branch "$branch" https://github.com/coopengo/trytond-modules.git /drone/src/trytond-modules &&
        git clone --depth=1 --recursive --branch "$branch" https://github.com/coopengo/proteus.git /drone/src/proteus
}

main
